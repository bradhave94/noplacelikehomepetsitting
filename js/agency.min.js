!function(a){"use strict";a('a.js-scroll-trigger[href*="#"]:not([href="#"])').click(function(){if(location.pathname.replace(/^\//,"")==this.pathname.replace(/^\//,"")&&location.hostname==this.hostname){var o=a(this.hash);if((o=o.length?o:a("[name="+this.hash.slice(1)+"]")).length)return a("html, body").animate({scrollTop:o.offset().top-54},1e3,"easeInOutExpo"),!1}}),a(".js-scroll-trigger").click(function(){a(".navbar-collapse").collapse("hide")}),a("body").scrollspy({target:"#mainNav",offset:56});var o=function(){a("#mainNav").offset().top>100?a("#mainNav").addClass("navbar-shrink"):a("#mainNav").removeClass("navbar-shrink")};o(),a(window).scroll(o),a(".portfolio-modal").on("show.bs.modal",function(o){a(".navbar").addClass("d-none")}),a(".portfolio-modal").on("hidden.bs.modal",function(o){a(".navbar").removeClass("d-none")})}(jQuery);/* This script simply changes the data attribute 'selected', but doesn't handle any animation. All animation is done in CSS. If the target element's 'data-sync' attribute is true, only one accordion can be opened at a time. */ function buildAccordion(el) { var accordion = el, accordionItems = accordion.children, oneAtTime = accordion.getAttribute('data-sync'), hideAllItems = function(ex) { /* Loop through all items and hide them */ Array.prototype.forEach.call(accordionItems, function(el, i){ if (el != ex) { el.setAttribute('aria-expanded', 'false') } }); }, toggleItem = function(el) { /* Toggle whether item is selected or not */ if (el.getAttribute('aria-expanded') == 'true') { el.setAttribute('aria-expanded', 'false'); } else { el.setAttribute('aria-expanded', 'true'); } }, clickBind = function() { accordion.addEventListener('click', function(e) { if(e.target && e.target.nodeName == "BUTTON") { /* Should only 1 item show? */ if (oneAtTime) { hideAllItems(e.target.parentNode); } /* Toggle the item */ toggleItem(e.target.parentNode); } }); }, /* Go time */ init = (function() { clickBind(); })(); } var accordions = document.querySelectorAll('.hs-accordion'); Array.prototype.forEach.call(accordions, function(el){ buildAccordion(el); /* Find all instances of '.hs-accordion' and initialize for each of them */ });